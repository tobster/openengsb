#
#   Copyright 2010 OpenEngSB Division, Vienna University of Technology
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#


# first some java-utils
import java.util.Map
import java.util.Set
import java.util.Iterator
import java.util.List
import java.util.ArrayList
import java.util.Collection
import java.util.Arrays
import java.util.Date
# openengsb-events
import org.openengsb.core.model.Event
import org.openengsb.drools.events.*
# misc openengsb-imports
import org.openengsb.drools.model.Notification
import org.openengsb.drools.NotificationDomain
# globals
global org.openengsb.contextcommon.ContextHelper ctx
global org.openengsb.core.EventHelper eventHelper
global org.openengsb.drools.NotificationDomain notification
global org.openengsb.drools.IssuesDomain issue
global org.openengsb.drools.BuildDomain build
global org.openengsb.drools.ReportDomain report
global org.openengsb.drools.DeployDomain deploy
global org.openengsb.drools.DomainConfiguration config
global org.openengsb.drools.DroolsHelper droolsHelper
global org.openengsb.drools.TestDomain test

function void send(NotificationDomain notification, String author, String name, String subject, String message) {
	if(!author.equals(name)){
		Notification n = new Notification();
		n.setSubject("Openengsb - EDB-commit-notification");
		n.setRecipient(name);
		n.setMessage("message");
		notification.notify(n);
		System.out.println(name + " notified");
	}
}

rule "notify_on_commit"
dialect "mvel"
when
  e : EdbCommitEvent()
then
  String author = e.getAuthor();

  Map emails = ctx.getAllValues("workflows/edbcommit/notification/email/");
  Set emailSet = emails.keySet();
  Iterator it = emailSet.iterator();
  boolean hasNext = it.hasNext();
  while(hasNext){
    String member = (String) it.next();
    send(notification, author, member, "", "");
    hasNext = it.hasNext();
  }
end